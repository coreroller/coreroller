// Code generated by go-bindata.
// sources:
// db/drop_all_tables.sql
// db/migrations/0001_initial.sql
// DO NOT EDIT!

package api

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dbDrop_all_tablesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x8e\x85\x30\x0c\x43\xf7\x9c\xa2\xf7\xe0\x30\x91\x09\x19\x88\x28\x6d\xd5\x04\x34\xdc\x7e\x24\xc4\x6c\xbe\xbe\x14\xf6\x2f\xb6\x63\xcf\xbd\xb6\xe4\x98\xb2\x24\xfd\x49\xf2\xab\xe6\x96\x5c\xb0\x27\x86\x31\x66\x19\x87\xaf\xc8\x61\xd2\x2d\x60\xd0\x5a\x56\x86\x6b\x2d\x01\xd9\xc0\x1b\x16\x09\x28\xae\x5d\xaa\x11\xf8\x85\x22\xaf\x28\x45\x72\x40\x2d\xbd\x1e\x2d\x7a\x43\x8b\x39\x0a\x47\xe9\xfe\x31\x32\x87\x1f\x6f\x45\xe9\x7d\x49\x1f\x06\xb4\xaa\x79\xed\x57\x70\x25\xa7\x14\x27\xbf\x5a\x94\xff\x06\xa3\x45\xd9\xf5\x54\x8f\x3c\x9f\x39\xe9\x19\x81\xa6\x0c\xde\xb2\x5a\x24\x3f\xc3\x31\xc1\x84\x76\x5d\xfa\x5d\x89\x8d\xc3\x5f\x00\x00\x00\xff\xff\xda\x81\x6e\xb2\xa2\x02\x00\x00")

func dbDrop_all_tablesSqlBytes() ([]byte, error) {
	return bindataRead(
		_dbDrop_all_tablesSql,
		"db/drop_all_tables.sql",
	)
}

func dbDrop_all_tablesSql() (*asset, error) {
	bytes, err := dbDrop_all_tablesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/drop_all_tables.sql", size: 674, mode: os.FileMode(420), modTime: time.Unix(1496479415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dbMigrations0001_initialSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5c\xdb\x72\xdb\x38\xd2\xbe\x8e\x9f\x02\xb5\x7b\xa1\xb8\x22\xd8\x00\x08\x92\x80\xe7\xdf\xad\x4a\x9c\xc9\x61\x26\xc9\x26\x93\x64\x52\xd9\x1b\x15\x08\x34\x25\xc6\x14\xa9\x21\x28\xf9\xf0\xf4\x7f\x91\x22\x29\xea\x68\x4a\x76\x12\xef\xd4\xd4\xb8\x14\xa1\x1b\xe8\xfe\xfa\x80\x6e\x10\x14\xc6\xe8\xc9\x38\x1a\x66\x2a\x07\xf4\x79\x72\x74\x84\x31\x3a\x4f\x33\xf8\x23\x8d\x63\xc8\x90\xd5\x23\x18\xab\xa3\x23\x15\xe7\x90\x21\xa3\x72\x15\x28\x0b\x48\xa7\x19\x64\x15\x05\xe4\x28\x8f\xc6\x70\x93\x26\x80\xfe\x85\x7a\xd3\x5c\xf7\x7e\x39\x3a\xd2\x19\x14\x33\xc2\x55\x0e\x89\x8d\xd2\x04\x45\x21\x4a\xd2\x1c\xc1\x55\x64\x73\x8b\xfe\x31\x9d\x46\x06\xa7\xd6\x4e\xfe\xb1\x20\xce\x55\x10\x03\xca\x41\x8d\xd1\xe3\xa3\x47\x91\x41\x05\x11\x9a\x64\xd1\x58\x65\xd7\xe8\x02\xae\x91\x81\x50\x4d\xe3\xbc\x1c\x18\x0c\x21\x81\x42\xec\xc1\x8c\x3f\x3e\xee\x1f\x3d\x4a\xd4\x18\xd0\x4c\x65\x7a\xa4\xb2\xc7\xcc\x3d\x2e\xd7\x4b\xa6\x71\x8c\xf4\x08\xf4\x05\x7a\x5c\x12\xfc\xdf\xbf\x51\xaf\x77\x8c\xa6\x49\xf4\xd7\x14\xfa\x47\x8f\xe6\x6b\x9b\x41\x6e\x4b\x35\x6c\xae\xc6\x93\xfc\xa6\x59\x49\x4f\xb3\x0c\x92\x7c\xd0\x8c\x35\xb3\x1e\x1d\xaf\x4a\x3e\xb5\x90\xd9\x83\x44\x2f\x38\x6f\x15\xbf\x21\x5a\x55\xc1\x82\xce\x20\x6f\x78\x5d\xb2\xce\x5b\x91\xcc\x39\xef\xa2\x75\xff\xe8\x51\x61\xa0\x41\xad\x62\xb3\x50\x06\x21\x64\x90\x68\xb0\x95\x05\x23\x73\x8c\xd2\x04\x19\x88\x21\x07\xa4\x95\xd5\xca\x40\x1b\xb4\x28\x31\x70\x55\x90\x54\xb8\x55\xf3\xae\xc1\xaa\x26\x93\x38\xd2\x2a\x2f\xbc\xe8\xce\x7e\xb1\x09\x9c\x16\xa8\xfd\xa3\x47\x06\xac\xce\xa2\x49\xb9\x5c\x0e\x57\xf9\x4f\x44\xab\xf0\x8c\xd2\xc8\x0d\x38\x7d\x54\x08\x7b\xbc\xee\x7b\x13\xa5\x2f\xd4\x10\x0e\x02\x28\xbf\x9e\x14\xd6\xc8\xd7\x80\x29\x07\xfe\x8d\x48\x41\x34\x83\xac\x8c\xe3\x85\x87\x6e\x70\xd1\x9a\xa8\x01\x73\x9a\xc5\x2d\x0e\x6f\x83\x53\x67\xf1\x82\x3a\x8c\x62\x58\xb2\x16\x25\x64\x8b\x49\x6c\x74\xd3\x8a\x96\x92\x6a\xa4\xec\xa8\xf9\xca\xe3\x77\x75\xf3\x96\xdb\xed\xb4\xdf\x92\x7b\xee\x36\xe3\xe3\xe5\x39\xfb\xa8\xc2\x6b\x83\x3d\x8b\x0c\x9b\xda\x81\xd2\x07\xbb\x3d\xcc\x20\xc9\xdb\x10\x35\xe4\xbd\x49\x6a\xf3\x28\xb1\xb9\x8a\xe3\x5e\x1f\x1d\x3d\xd2\xa3\x2c\x1d\x17\xcb\x6d\x34\x72\xc3\x56\xd2\xda\x91\x62\xae\xb7\x82\x73\x02\x60\xec\x40\x99\x71\x94\xa0\x20\x4d\x63\x50\x49\xc3\x16\xaa\xd8\x16\x10\x44\x76\x60\x20\xce\xd5\x56\x02\x13\xd9\x42\xf5\xc1\x44\x5d\xc7\xa9\x32\x83\x40\xe9\x8b\x34\x0c\xd7\xe8\xf3\xac\xcc\x7a\x63\xc8\x55\xb1\x21\x0d\x6c\x34\x4c\x54\x3e\xcd\x60\x90\x59\xb5\xec\x6d\x2d\xd1\x97\x18\x6e\x96\x5d\x6c\x99\xce\x80\x32\x71\x94\xec\x22\xb9\x8b\x5f\x55\x91\xba\xd3\xa7\x9a\x68\xee\x9e\x44\x57\x1c\x66\xb1\xca\xba\x6b\x8d\x54\x92\x40\xfc\xdd\xf7\xd8\x02\xa7\x34\x4e\xb3\x8d\xf4\x0f\x29\x38\x57\x2d\x72\xbb\x21\x8a\xa2\xa7\x92\xa4\x4e\xd0\xab\xa1\xbd\x96\xa7\x17\x96\xaa\xf1\xdf\x61\xa3\x61\x96\x4e\x27\x87\xd5\x12\x77\xdc\xee\xda\x28\x17\x25\x5e\x3a\xcd\x07\x51\x32\x98\x64\xe9\x30\x03\x6b\x37\x47\xef\x92\x7f\xa7\x71\xa4\xaf\x07\xd3\x89\x51\x39\xd8\x01\x24\x85\x42\x66\x63\x14\x6f\x60\xb3\x2a\x84\xc1\x38\x35\xd0\x95\x21\x0d\xc3\x48\xc3\x60\x94\x4e\xb3\xee\xc2\x35\x05\x6b\x8d\x13\x2f\x77\x90\x6a\x74\x02\x59\x94\x9a\x41\x94\xe4\x90\xcd\x54\xbc\x94\x43\x57\xc1\xdc\xc2\xd2\xc0\x5b\x8d\x8f\xd5\x55\x83\xc8\x04\xb2\x8a\xbe\xd8\x74\x61\x08\xd9\xb6\x59\xb7\x70\x55\x3b\xf2\x12\xd0\xa5\x4a\xe9\x34\xef\x22\xec\x0a\xc7\xbd\x14\x85\xf7\x1a\x90\x55\x84\x6c\x0a\xc8\x26\x78\xee\x31\x20\xeb\x60\x5b\x2c\xbb\x16\x8f\xe5\x6e\x99\xe8\xba\xbe\x6a\x87\x57\x3b\x30\x2b\x9c\x23\xb3\x00\x35\x9a\xa0\x28\x81\xfc\x5e\x12\xdf\x7a\x99\x50\xcb\x35\xb0\xb9\xca\xa7\x75\xc2\xb0\x90\x45\x2a\x6e\x4b\xb6\x96\xba\xc9\x72\x2a\xde\x95\xa7\x23\xdd\xae\x08\x5a\x8c\x3b\xc4\x59\xa9\xd9\x0f\x2b\x1e\xef\xe2\x8f\x15\x1e\x55\x80\xf5\x8f\x1e\xc5\xca\xe6\x83\x72\xa5\x41\x98\x66\x75\x58\xed\x3f\x71\x39\x4f\x15\x41\xc3\x4c\x25\xeb\x02\xae\x10\x6d\xd4\xbd\x52\x79\x13\xdd\xa2\x76\x9e\x7f\xbf\x57\xf2\x6d\x0c\xb0\xe2\xa4\x9b\x42\x71\xe1\xd3\xdb\xe2\xf0\x5e\x83\xba\x8c\xb2\x4d\x21\x5d\x87\xdf\xd6\x88\x6e\x47\xd8\xe3\x96\x86\x7d\xb4\x2c\xe0\xe6\xe8\xde\xec\x93\xad\x69\x8e\x7f\xe9\xc8\xb3\xb2\x5a\x57\xb6\x5a\xf1\xdb\x82\x77\x30\x8a\x6c\x9e\x66\xd7\xbb\x82\x78\xcd\xad\x77\x79\xd7\xbd\x06\xd4\xdf\xc7\xb3\x76\x55\xd1\x5b\x4d\xd2\xd1\x5f\x56\xd9\xba\xbb\xcc\x2a\xe7\x56\xaf\x29\xfb\xba\x41\xd9\x9a\xef\x70\x94\xba\xa7\x5f\x2a\x2f\x8a\x92\x0e\x6c\x61\xea\x0d\x23\xed\x42\x70\xa9\xf3\xd9\x9e\xee\xe7\x2d\xe6\x0e\x29\xee\xd4\x27\x65\x30\x8b\xd2\xe9\xe6\xa6\xb4\xe8\x6f\xb3\x2c\xcd\x06\xba\x28\x15\x57\x8e\x0b\x1e\xb0\xab\x2e\x8c\x57\xcc\xb5\x56\xfe\xb5\xa6\x6b\x9b\xb9\x98\x6d\xa3\xbb\x56\x06\xd8\xed\x9c\x15\xd1\xad\xae\x58\xd1\x2d\x89\xb8\x7e\x18\xa7\xf3\x68\x16\xe5\x3b\x93\xd4\x5d\xac\xae\x63\x65\xed\x26\xf7\xb4\x30\x83\xac\x58\x78\xc3\xd8\x61\xe5\xc5\x03\xc8\x41\x07\xd5\xba\x0b\xde\x6d\x8e\xde\xdd\xbf\x37\x7a\xd5\xc2\xc6\xb7\xfa\xcc\x82\xb4\x95\xaf\xb6\x13\x2d\x55\xd8\xdb\xc9\x96\xfd\x79\xe3\x41\xe7\xa0\x9e\x2a\x88\x95\xbe\x88\x23\x5b\xe6\xa1\xbb\x9f\xad\x6c\xb0\xc8\xa6\x49\x6e\x35\xcd\x52\xcd\xb2\x10\xab\x8f\x5a\x10\x94\xe0\x63\x8c\x5e\x27\x51\x5e\x44\x91\x51\xb9\x2a\xbf\x78\x5e\xb7\xbc\xa0\xc6\x48\x25\xa6\x3c\x21\x47\x8f\xcb\xf3\xb5\xd3\xf2\xef\xf1\x51\x94\x58\xc8\xca\x44\x9e\x36\x47\xc8\x55\x93\x83\x66\x2a\x9e\x82\x45\x8f\x7b\x46\x48\x87\x33\xa3\xb1\x64\x94\x63\xce\xa9\xc1\x8a\xab\x10\x07\xc6\x08\xc7\x57\x4e\xc0\x1c\xd9\xeb\xa3\x5e\x15\x9a\xbd\xe3\x5f\x96\xe6\xad\x0e\xe6\xeb\x07\x0f\x7d\x34\x7f\x8c\xd0\x47\xf5\x51\xfd\x62\xa5\x52\xaa\x62\x2a\x11\x38\x94\x49\x66\xb8\xef\x0b\x57\x30\x4d\xc0\x0d\x95\xf4\x14\x80\xeb\x52\x27\xa4\xe5\x72\x5d\xc4\xaa\xc0\xf9\xb5\xcc\x4a\x45\x3a\xb2\x4b\xb2\xb5\xf3\x63\xf1\xb7\x8f\xe6\x5b\x5b\x1f\xb5\x36\xb2\x85\x80\x4e\x1f\x91\x3e\xea\xbd\xae\xc3\x21\x83\x49\x9a\xe5\x60\x90\x4a\x50\xb9\x93\x20\x33\xcd\xa2\x64\x58\xfc\x7b\x5e\x78\x23\x9b\xc3\xe4\x64\x15\x92\xfd\x97\xa5\x7d\xd4\xfb\x5c\xce\x98\xa1\x91\xb2\x68\x92\xa5\x1a\xac\x2d\x97\x36\xf3\xe4\x02\xa6\xf6\xca\x7b\x58\x8f\xb5\xd4\xb4\x68\x3a\x19\x66\xca\x80\x41\x79\x5a\x27\xde\xc6\x79\xab\x8c\x78\xd7\x35\x69\xa5\xe4\xf3\xf4\x32\x89\x53\x65\x0a\x14\xe3\xa2\xb9\xca\xef\x6d\x05\xde\x86\xb1\x89\x60\x95\x65\xd1\x0c\x0c\xb2\x53\x5d\x20\x1a\x4e\xe3\xf8\xfa\xae\x4b\x09\x42\xe6\x6b\xbd\x9e\x9f\x8f\xd7\x93\x9f\xa0\x6a\x71\x9d\x8e\x27\x31\x94\x9b\x41\x51\xa1\x40\xd1\x00\xa2\xe0\xba\x49\xb4\x27\xb5\xe3\x9e\xa7\x19\xfc\xe7\x63\x7b\xf7\x58\x92\x6b\x65\x57\x99\x87\xee\x92\x50\x9b\xc2\x0c\xa4\xc7\x04\x55\x1e\x36\x54\x85\x98\x07\x06\xb0\x54\x44\x61\xe9\x07\xbe\x07\xae\x67\xb4\xeb\x17\x11\x36\x5f\xbc\xf8\xf4\x26\x4a\xa6\x57\x28\x4c\x33\x34\x56\xd6\x46\xb3\xa2\xb3\xca\x66\x90\x21\x03\x93\x38\xbd\x1e\x43\x92\xdb\x7d\x62\xb2\xad\x43\x6d\x88\x46\x3c\x16\x28\xae\xa5\xe0\xd8\x05\x19\x60\x4e\x29\xe0\xc0\xd7\x0e\x0e\x1c\x08\x28\x0f\x7d\xc5\xbc\x22\x01\x14\xf8\xfa\x9e\x77\xe2\x9c\x90\x62\xe9\x51\x9e\x4f\xec\xd9\xe9\xa9\x4e\xc7\xe3\x34\x29\xb2\x60\x51\x03\x17\xd1\x30\x4c\xd3\x61\x0c\x6a\x12\xd9\x13\x9d\x8e\x4f\xe7\x81\x89\xeb\x51\x9d\x66\x80\x53\x7b\x92\x40\x7e\xaa\xc6\xc6\xe3\x78\x6a\xb3\xd3\x6a\xe2\xd3\x62\xe6\x39\xc3\xc9\xf0\xa6\xd7\x47\xef\x3e\xbf\x79\xd3\x47\x3d\xea\x72\xe9\xf9\xdc\x15\xc5\x78\xcc\x7f\xbf\xf4\x9f\xc2\xb3\x37\xd9\x9f\xaf\x9f\xcb\xdf\x82\xf0\xfa\x6d\xfa\x1b\x3c\x73\xaf\x7f\x1f\xfe\xab\x18\x67\x84\xba\x98\x48\xcc\x08\x22\xe4\x8c\xb2\x33\xc7\x3f\x71\x99\x23\x9d\x92\xbb\x93\x31\x6e\x83\xcc\x71\xfc\xc0\x09\x7d\xc0\x61\xc8\x24\xe6\x3e\x08\xac\x88\xcb\x70\x48\x84\xc3\x0d\x73\x03\x13\xb8\x2d\xc8\xf8\xf7\x82\x8c\xef\x82\xcc\x25\x54\x48\xca\x8a\xf1\x30\xbb\xb8\x50\x4f\x9e\x9d\xde\x7c\x9a\xf9\xff\x79\xff\x65\x18\x99\xaf\x4f\x2e\xf8\xc7\xe4\xf9\xc7\x75\xc8\xbc\x33\xea\x9e\x31\x79\x42\x89\x60\x9e\x77\x6f\x90\x69\xa6\x1c\xcf\xa1\x0c\x07\x52\x48\xcc\x89\x03\x58\x05\xae\x8f\x89\xa7\x89\xeb\x2a\x1f\x94\x66\x15\x64\x82\x88\x13\xf2\x3d\x20\xab\x26\xde\x0a\x99\xef\xfb\xd4\xe7\x94\x17\xe3\xc1\x5f\x4e\xf8\xe1\x8f\x57\xef\xc5\xd5\x33\xe7\x8f\x17\x9f\xbf\x9d\x9b\xa7\xa1\x73\xf9\xe1\xeb\x39\xfb\x75\x83\x97\x11\x79\x46\xbc\x13\xe1\x48\x29\xe4\xbd\x41\xc6\x1d\x57\x10\x21\x19\xd6\xca\x08\xcc\x3d\xa1\xb0\x22\x41\x80\x21\x90\x86\x00\x91\xa0\x15\xaf\x21\xa3\xee\x77\x82\x6c\x3e\xf1\x76\xc8\x84\xc7\x1d\xd7\x2f\x95\xbe\x78\xc7\xd5\x38\xfd\xfd\xeb\x9f\xff\xfd\xfc\x92\x7d\x49\x3f\x9a\x0f\xaf\xe8\xfb\x57\xef\x6f\x32\xf7\xe9\x32\x64\x2e\xa2\xce\x99\xeb\x9e\x31\x72\x52\xc0\x4d\xef\x0f\x32\x26\xb8\x61\xd2\x0d\xb0\x4b\x45\x88\xb9\xf1\x7c\x2c\xa5\x04\x2c\xb9\xf4\x84\x21\x00\x46\x92\x1a\x32\x26\xbf\x13\x64\xf3\x89\xb7\x42\x26\x3c\xc6\x5d\x77\xee\x65\x2c\x1e\xa5\x9f\x67\xb3\x24\xfd\xea\xb8\x72\x12\xb1\x17\x89\xfa\x78\x7a\x65\x87\x79\xd4\x0a\x4c\x4a\x30\x25\x88\x39\x67\x94\x9e\x51\x72\x22\x98\x2b\x85\x7b\x28\x64\x4d\x1d\xd1\xec\x4e\xc4\x23\x1e\x57\xa6\xd8\x3e\x38\xe6\x92\x70\x2c\x95\x07\x38\x34\xdc\x73\x5d\xe9\x18\x1a\x94\x39\xc4\x96\xa5\x7c\xf1\xe9\x9f\x94\x07\xd2\x78\x6d\x93\x52\x89\x88\x5b\x44\x81\xc3\x4f\x98\x47\x19\xa7\x9d\xe5\xeb\xa3\x6e\xe9\xf4\x36\x3d\x28\x13\x81\xd0\x4c\x62\x97\xb8\x45\xb4\x70\x07\x0b\xf0\x7c\xac\xa8\x22\xe0\x68\x8f\x53\x5d\xfa\x59\x00\xb9\x2a\xb5\x08\xb5\x1f\x3a\xce\x76\x2d\xb8\xe3\xf0\x1f\xae\x85\x12\xbe\x22\x4e\x61\x8d\x62\x47\xe6\xbe\xa2\x58\x18\xcd\xb1\xe3\x12\x3f\x50\x20\x29\x40\x09\xad\x8a\x27\xa3\xb9\x1a\x34\x0c\x02\xb1\xc3\x18\xae\xef\xee\xa5\x46\xa7\x10\x5a\x51\xa3\xea\x97\x1b\x2d\xa4\x62\x06\x02\x9f\x60\xc7\x0f\x00\x73\xc2\x3c\x2c\x5c\x27\xc4\x41\x68\x8c\x17\x38\xdc\x0f\x82\xd2\x93\x3e\x36\x3e\xf5\x22\xcd\x8a\x22\xdb\x4c\xe7\x8f\xc2\x75\x3c\xb5\x39\x64\x45\x91\x33\xbf\x69\x30\xbf\x40\x50\xfd\xad\xbe\xea\x3d\x9d\xda\x3c\x53\x71\xa4\x4e\x3f\x5e\x9b\x04\xae\x7b\xe5\xbe\x87\xc6\x51\x32\xcd\xa1\xe0\x2d\xca\x6a\x8f\xb4\xbe\xd8\x82\x91\x24\x1e\xdb\x07\xa3\x4e\x31\x73\x0b\x46\x4e\x08\x94\x70\x49\xb0\x31\xbe\x83\x79\xc0\x25\x0e\x7c\xa6\x30\x13\x4a\x53\xa9\x74\xa8\x8d\x2e\xd6\x7a\x56\xf9\xeb\xfb\x2c\x1d\xa7\x65\xf3\x53\x98\x1e\x65\x10\x83\xb2\x60\xfb\x65\x93\xa0\x72\x3d\x42\xc1\x74\x68\x91\x9d\x80\x8e\xc2\x48\x17\x5f\x5f\xa7\xd3\x0c\xe9\x34\x09\xa3\xe1\x34\x2b\xab\xd6\xde\x32\x90\xdf\x07\x4e\xdf\x61\x7c\x2f\x97\xeb\x14\xba\xb7\xc0\xe9\x06\x82\x12\x4f\x10\x0c\x8e\xa7\x30\x17\xbe\x2c\x2a\x0d\x85\x79\x28\x85\x04\x41\x02\x21\xcb\xf0\x7f\x5a\x07\xce\xa7\x4c\xe9\x0b\xdb\xf4\x57\x06\x66\x10\xa7\x93\xa2\xb4\x46\x97\x69\x76\x51\x36\x7a\x91\xad\x71\x36\x28\xcc\xe0\xaf\x29\x24\x79\x7c\x7d\x47\xa7\x2c\x36\x1f\xa7\x03\x8a\x5c\xd2\xbd\xb2\x68\xa7\xd4\xb1\x9a\x7f\x96\x2e\xa0\x34\x60\x06\x2c\xa0\x1e\x30\xc0\xae\x1f\x0a\xcc\x7d\xdf\xc5\x82\xf9\x21\x16\x21\x09\x28\x55\x20\x03\x53\xc6\xcb\xf2\x9d\xa4\x5e\x59\x04\x88\xf3\x67\x22\x7f\x0b\xe4\xad\x78\x7e\xfd\x5f\xf7\x8f\xff\x5e\xde\x3c\x7f\x73\xfd\xc9\x5c\xbc\xfa\xf6\x9f\xd3\xaf\xc3\xf0\xf7\x3f\x13\xf6\xc7\xf0\xf3\xdb\xf4\x42\xff\x6b\x01\xe4\x12\x9e\xbd\x5e\xeb\xff\x8d\xd5\xbc\xc3\x98\x28\xb1\xe9\xd4\xbb\x74\xd3\xd9\xb8\x8a\xe9\x20\x74\x70\xe1\x48\x98\x83\xd0\x58\x08\x10\xd8\x33\xa1\xa4\xa1\x66\x1e\xd7\xde\x16\x9d\x3f\x7c\x7e\x99\x8c\xdf\xbb\x74\x34\xf1\x6f\xae\x9f\x3c\x79\x92\xba\xe1\xb3\xd7\x97\xbf\xc6\xaf\x93\x4f\x4f\xc7\xd6\x3f\x4d\xbe\x25\x17\x57\xd3\x3c\x39\xfd\xf0\x7a\x6f\x9d\x9b\x72\x9c\x7a\xf3\x4d\xff\xa0\x6d\x66\xb3\xca\x4c\x4a\xed\x72\x43\xb1\xe3\x70\x8e\xb9\x02\x89\x85\x32\x0c\xbb\xda\x73\x8c\xeb\x19\x4f\xcf\xab\x94\x0d\x2a\x7f\x3c\x9f\x09\xf9\xf2\xeb\xcd\x95\xff\xfa\xea\xc9\xa7\xf8\xdb\x5f\xc1\x3b\x6b\xfc\x34\xf1\xdc\x34\xfd\xf2\xd7\xb3\x1b\x7d\x9e\xbd\x79\xf1\x86\x5f\x9e\x8f\x3e\x1c\x60\xe6\x79\x39\x2d\x99\xcf\xcb\xd6\xb3\x5b\xf3\xd0\x4d\x67\x9f\x0b\x13\xba\xa1\xc6\x94\x29\x17\x73\xa3\x0c\x56\x3e\x05\xcc\x3d\x57\x6b\xea\x79\x82\x70\xb1\x45\x67\xf9\xea\xb3\xe5\x97\xa3\xe8\x26\xbc\x9e\x05\x7c\x3c\x8c\x9f\x7c\x51\xef\xd4\x17\xe7\xcf\x37\x1f\xbe\x5e\xda\x2f\xf4\xe5\xab\x77\xaf\x7e\x7b\x37\xd1\x2f\x86\x7c\x3f\x9d\x5b\xf5\xb0\x60\x2e\xe3\x65\x6c\x75\xaa\xfe\xbb\xe9\x2c\xb5\xe1\x3e\xd7\x2e\x86\x50\x39\x45\x7a\x90\xc5\x96\xce\xb0\x2b\x8c\x09\x84\xcb\xc0\x88\x6d\x76\xa6\x1f\xe5\xcd\x87\xf3\x37\x2f\xbf\x8d\x21\xfc\x9a\xfc\x7a\xaa\x5e\xe8\xc9\xf9\xb7\x37\xf4\x9d\x1d\x4e\x5f\x8d\x3e\xbc\xfc\x46\x3e\x9f\x8f\xdd\x90\xbc\x95\xa2\xbb\xce\x2b\x05\xad\xa4\x8e\xef\x8b\x7d\x6a\x8f\x23\x8c\xd1\x47\x35\x9e\xac\x5c\x34\xa6\xf7\x70\x58\x13\x78\xdc\x15\x84\xb8\x58\x84\x9c\x60\xee\x31\x1f\x07\x8e\x13\xe0\x00\x7c\xa2\x7c\x2a\x34\x17\xf3\xd2\x65\x6d\xf9\xe2\xdb\xdf\xa6\x36\x47\x2a\x59\x5a\x3b\x4f\x91\x1d\xa5\x97\xa8\xf8\x5f\xa7\x69\xdc\xbe\xaa\x1f\x59\x74\x76\x7c\xd7\x93\x9c\x52\xb9\xf9\x31\xd9\x34\x8b\xfb\xa8\xbe\x91\xdb\x5c\x55\x5d\x7b\xe6\xde\xda\x36\xa9\x74\x8b\xcc\x87\xdd\x50\x30\x4c\x29\xb8\x58\x1a\x9f\xe0\x10\xc2\x50\x50\xa9\x8d\x96\x61\xaf\x8f\xf8\x52\x97\x54\xbf\x47\x70\x92\x66\xc3\xb2\xcd\xc9\xc1\xe6\x03\x7a\x42\x4e\x4a\xcf\x6d\x3e\x74\xc2\xf2\x3b\x28\x45\x99\x27\xfd\x50\xf1\x42\x29\xe7\xee\x4a\x39\xb5\x52\xce\xcf\x54\x4a\x10\xc2\x83\x22\x15\xb8\xa1\xf4\xef\xae\x14\xaf\x95\xe2\x87\x2a\xd5\x7a\x9c\x52\xc7\x56\x79\x25\x69\x55\x87\x3e\x6a\xdd\x99\x6c\x05\x5a\x08\x0e\x0b\xb8\x2a\x8c\xa4\xb7\xeb\xd3\x7b\xab\x8a\x4e\xa0\x6c\x75\x08\x39\x3f\x27\xa4\xb3\xbc\xe5\x51\x52\x07\xd0\xee\x57\x2f\x1d\x30\x03\xa0\xc4\x2d\xce\xd7\xea\x7d\xfe\x49\x88\x94\x2f\x5e\xec\xa3\x57\x27\x0f\xbf\xa5\x62\x0e\xb4\x52\x9e\x08\xf4\x2d\xa1\x5f\x34\x1e\x06\xfd\x7a\xce\xd0\xd4\xe2\x4b\xb0\x39\x66\xf5\xb7\x55\xb3\x36\x3f\x9b\xb6\x7d\x54\x8c\x22\x9d\x2a\x9b\xff\xe0\xbe\xad\x2b\x6c\x9d\x6c\x73\x0b\x6c\x3e\xf1\x39\xf3\xb8\xc2\x8c\xf8\x04\xf3\x40\x70\x2c\x3d\x30\x58\x28\xe6\x49\x13\x28\x97\x30\xba\x0a\x1b\x28\x9b\x63\xba\x0d\xb6\x62\xf4\x6f\x0f\x5b\x40\x29\x11\xd4\x51\xb7\x79\xdb\x07\x85\x9f\xc3\xac\xfc\xf4\xb4\xec\xc1\xda\x8d\x59\x03\x59\x03\xc0\x43\x84\xab\x53\x66\x5b\x81\xab\xfd\xc8\xbf\x8f\xa2\x49\x2b\xa1\xd4\x43\xa5\xff\x50\x72\x52\xfc\xb7\xd6\xd4\x74\xe0\x67\x2d\xfe\xb5\x6a\xb9\x03\xbf\xd3\xe2\x77\x0e\xe0\xe7\x2d\xfe\xb5\xca\xb5\x03\xbf\xdb\xe2\x5f\xeb\x70\x3a\xf0\x7b\x2d\x7e\xef\x00\x7e\xbf\xc5\xbf\x76\xac\xda\x81\x5f\xb4\xf8\xc5\x01\xfc\xb2\xc5\xbf\x56\x0b\x76\xf1\x1f\xd2\x76\xa0\xb5\x33\xbc\x2e\x33\x2c\xb9\xe0\x56\x1f\x5c\xba\x49\xb9\x28\xca\xaa\x02\xaa\xba\xb6\x50\x56\x2a\xcd\xe7\xe6\xc3\xfc\x90\xbc\xf9\xe7\xb2\xf3\x77\x0e\xc0\x2e\x3b\xdb\x0f\x14\x7e\xbf\xec\xf1\x5d\x84\x67\x07\x0b\xdf\xbd\xe8\x7d\x80\xc8\x77\x2f\x6e\xfb\xa8\xdb\xce\xfe\x03\x85\x77\x7f\xbe\xf0\x87\xbb\x8d\xf7\xf3\x85\xa7\x6d\xe1\x9d\x7d\x84\xf7\x7f\xbe\xf0\xfc\x60\xe4\xc5\x5e\x01\xdb\xa5\x2c\xbb\x9b\xcf\xfb\xfb\x08\x2f\x7f\xbe\xf0\x4b\x3e\xcf\xf6\xda\xa4\xf6\xea\x4d\xbf\x8f\xf4\x87\x3b\x3d\xdd\x6f\x8f\x3d\x40\xfa\xe6\xb2\x68\x2d\x71\x23\x44\x92\x5e\x3e\x3e\x46\x6a\xfe\xab\x14\xa8\x7c\xcb\xaf\xfc\x51\x0a\x84\x51\xf3\x7a\x5e\xcf\x41\xe5\x0b\x83\xf3\x47\x28\x7c\xef\x33\x99\xae\xa1\xda\xb5\xe1\x59\xaa\x4e\xee\x57\x53\xaf\xd1\xd4\x2d\x8d\xf8\xf7\xd5\x94\xb2\x46\xd5\xea\x46\xe2\xdf\x57\x55\xd1\xa8\xca\xff\xe6\xfe\xcb\x78\xa3\x2a\x9b\xf7\xd9\x0f\x57\xd5\x6d\x2f\xf3\xac\x69\xde\xb6\x58\x27\x14\x16\xf6\xfe\x09\x25\xdd\x6d\xda\xb8\x07\x6a\x83\xda\x27\x28\x0f\x50\x2f\x6f\x5f\xbd\xe4\x43\xb6\x92\x7f\xa0\x36\x88\x3f\x70\x33\xb1\xbb\x2b\x86\x28\x41\x16\x74\x9a\x98\x07\xaa\x23\x6f\x3d\x0b\xeb\x56\xe0\x78\x0f\xd9\x17\xdd\x43\xd5\xf9\x5f\x49\x19\xdd\x15\xf3\x1f\xb2\x9d\xfc\x43\xd5\xf9\x9f\x49\x1a\x77\xd1\xec\x47\x66\x8d\x2d\xd7\x14\xd8\x3d\x5c\x53\xf0\x05\x31\x9e\xe4\x04\x4b\xc5\xc5\xfc\x1a\xa2\x10\x26\xc4\xd2\x0d\x94\xe7\x04\x01\x48\x1d\x6c\xbe\xa6\x80\xca\xd3\xc8\xa7\x49\x9a\x8f\x20\x43\x76\x6d\xbc\x8f\x42\x80\x18\x85\x19\x00\xca\x53\x94\xc1\x38\x9d\x01\x1a\xc3\xcf\xbc\xa5\x00\x61\x40\x85\xa7\x25\x36\xae\x0e\x30\x37\x21\xc3\xd2\x11\x0c\x6b\x2e\x18\x05\x6e\xb4\xe6\x41\xeb\xd9\xf7\xd9\xe9\x69\x9c\x6a\x15\x8f\x52\x9b\x9f\x09\x42\xe6\x77\xb1\x0d\x8c\xd3\xc1\x8c\xd6\x97\xbe\x9b\x0f\x9d\xa0\xfc\x0e\x4a\x05\x8a\x09\x15\x72\x81\x03\x37\x90\x98\x7b\x04\xb0\xe4\x9e\xc2\x10\x28\x49\x3c\x0d\xbe\x51\xe1\x1e\x4a\xd1\x5a\x29\x7a\xa8\x52\x77\x7c\xf0\xad\x7c\x2d\xb4\x54\x1c\x1b\xa6\x1c\xcc\x7d\xd7\xe0\x00\x3c\x8e\x25\xa5\x61\x28\x8c\x07\x52\xfa\x2b\x0f\xf4\x17\x17\xc9\xbb\xfa\x73\x27\x4f\xb8\xed\xaa\x28\x55\x0e\x53\x4a\x62\xc7\x75\x19\xe6\x32\xd4\x58\x31\xa1\xb1\xe7\x72\x27\xd0\x3a\x24\xc4\x93\x0b\x41\x11\x46\x66\xfe\x40\xf2\xd3\x08\xea\x77\xe4\x6c\x3e\x0d\x43\x74\x19\xc5\x31\x0a\x00\xa9\xf8\x52\x5d\x5b\x34\x82\x0c\x7e\xf0\x23\xc9\xae\xb0\x75\xb2\x4d\x95\xb1\x9a\x5f\x16\x7d\x9e\x5e\x26\x47\x47\x26\x4b\x27\xf5\x6f\x5f\x84\xf5\x4f\x81\x96\x2f\xaf\x56\x2f\xce\xfe\xb2\x99\x64\xfe\x1e\xea\x6e\x9a\x76\x5a\xda\x4d\x59\x07\xdc\x6e\xaa\xe5\xfb\x6f\xb7\xd0\x56\xde\xbe\x9b\xaa\xf2\x9d\xdd\x44\xcd\xa3\xb3\x6e\x64\xf5\xef\xfe\x74\xa4\xee\x0e\xd2\xb6\x8d\x74\x37\x57\xeb\x65\xcb\x0e\x84\xb7\x59\xb4\x3e\x38\xe8\x64\xce\x0d\x2f\x84\x37\x7c\xff\x1f\x00\x00\xff\xff\x23\x3a\x94\xda\xe4\x56\x00\x00")

func dbMigrations0001_initialSqlBytes() ([]byte, error) {
	return bindataRead(
		_dbMigrations0001_initialSql,
		"db/migrations/0001_initial.sql",
	)
}

func dbMigrations0001_initialSql() (*asset, error) {
	bytes, err := dbMigrations0001_initialSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/migrations/0001_initial.sql", size: 22244, mode: os.FileMode(420), modTime: time.Unix(1496990329, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"db/drop_all_tables.sql": dbDrop_all_tablesSql,
	"db/migrations/0001_initial.sql": dbMigrations0001_initialSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"db": &bintree{nil, map[string]*bintree{
		"drop_all_tables.sql": &bintree{dbDrop_all_tablesSql, map[string]*bintree{}},
		"migrations": &bintree{nil, map[string]*bintree{
			"0001_initial.sql": &bintree{dbMigrations0001_initialSql, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

